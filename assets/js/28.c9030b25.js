(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{358:function(t,s,a){"use strict";a.r(s);var i=a(0),e=Object(i.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("如果你也是一名大数据方向的工作者, 那么就一定听说过分布式文件系统(HDFS). 本文将介绍HDFS、详细阐述其中的重要概念、体系架构、存储原理和读写过程, 如果你希望从零开始了解这个系统, 那么可以阅读本篇文章.\n")]),t._v(" "),s("h2",{attrs:{id:"简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),s("p",[t._v("为了解决大数据量下的高效存储问题, 谷歌开发了分布式文件系统(Google File System, "),s("strong",[t._v("GFS")]),t._v("), 通过网络实现文件在多态及其上的分布式存储. 而Hadoop分布式文件系统(Hadoop Distributed File System, "),s("strong",[t._v("HDFS")]),t._v(")则是针对"),s("strong",[t._v("GFS")]),t._v("的开源实现, 和MapReduce一起成为Haddop两大核心组成部分.\n总的而言, HDFS实现了以下目标:")]),t._v(" "),s("ol",[s("li",[s("em",[s("strong",[t._v("兼容廉价的硬件设备")])]),t._v(': HDFS将硬件节点失效的情况视为"正常"情况, 设计了快速检测应急教案故障和自动恢复的机制. 也开源持续监视, 容错处理等. '),s("mark",[t._v("可以实现在硬件出错的情况下也能实现数据的完整性")]),t._v(".")]),t._v(" "),s("li",[s("em",[s("strong",[t._v("流数据读写")])])]),t._v(" "),s("li",[s("em",[s("strong",[t._v("大数据集")])])]),t._v(" "),s("li",[s("em",[s("strong",[t._v("简单的文件模型")])]),t._v(': HDFS采用"一次写入、多次读取"的简单文件模型, 文件一旦完成写入并关闭后就只能读取.')]),t._v(" "),s("li",[s("em",[s("strong",[t._v("强大的跨平台兼容")])]),t._v(": HDFS采用Java语言实现, 具有良好的跨ing太兼容, 任何支持JVM的机器都可以运行HDFS.")])]),t._v(" "),s("p",[t._v("但是HDFS也有一定的局限性:")]),t._v(" "),s("ol",[s("li",[s("em",[s("strong",[t._v("不适合低延迟的访问")])]),t._v(": HDFS主要面对大规模批量处理的数据, 采用流式数据读取, 具有很高的吞吐率, 但是同时意味着有较高的延迟.")]),t._v(" "),s("li",[s("em",[s("strong",[t._v("无法高效存储大量小文件")])]),t._v(": HDFS一个块的较大, 而文件大小如果小于一个块则无法高效存储. 具体原因在文章后面有具体的讨论.")]),t._v(" "),s("li",[s("em",[s("strong",[t._v("不支持多用户写入以及任意修改文件")])]),t._v(": HDFS只允许一个文件的写入者, 不允许多个用户对同一个文件进行写操作. 并且无法执行随机写操作, 只能追加.")])]),t._v(" "),s("h2",{attrs:{id:"相关概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#相关概念"}},[t._v("#")]),t._v(" 相关概念")]),t._v(" "),s("p",[t._v("HDFS中有几个非常关键的概念, 包括: 块、名称节点、数据节点、第二名称节点.")]),t._v(" "),s("h3",{attrs:{id:"块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#块"}},[t._v("#")]),t._v(" 块")]),t._v(" "),s("p",[t._v("HDFS和传统文件系统一样, 将文件分为了不同的块, 默认的一个块的大小是 "),s("mark",[t._v("64MB")]),t._v(". 可以看出相对于传统文件系统的几千字节, "),s("mark",[t._v("HDFS的块要大得多")]),t._v(". 这么做的优势是可以 "),s("mark",[t._v("最小化寻址开销")]),t._v(".\n采用抽象的块概念的好处:")]),t._v(" "),s("ol",[s("li",[s("em",[s("strong",[t._v("支持大规模文件存储")])]),t._v(": 大规模文件被分割成不同的块, 可以分别存储在不同的机器上, 不受节点本地存储容量的限制.")]),t._v(" "),s("li",[s("em",[s("strong",[t._v("简化系统设计")])]),t._v(": 首先, 因为块的大小是固定的, 简化了存储管理. 其次, 元数据与文件库不需要一起存储, 方便了元数据管理.")]),t._v(" "),s("li",[s("em",[s("strong",[t._v("适合数据备份")])])])]),t._v(" "),s("h3",{attrs:{id:"名称节点和数据节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#名称节点和数据节点"}},[t._v("#")]),t._v(" 名称节点和数据节点")]),t._v(" "),s("p",[t._v("在HDFS中有两种节点: "),s("strong",[t._v("名称节点(Name Node)"),s("strong",[t._v("和")]),t._v("数据节点(Data Node)")]),t._v(".")]),t._v(" "),s("p",[t._v("名称节点负责管理分布式文件系统的命名空间(Namespace), 保存了两个核心的数据结构: FsImage和EditLog. 其中FsImage用于维护文件系统树以及文件树中所有的文件和文件夹的元数据. EditLog中记录了所有针对文件的创建、删除、重命名等操作.")]),t._v(" "),s("p",[t._v("数据节点是HDFS的工作节点, 负责数据的存储和读取, 会根据客户端或者名称节点的调度来进行数据的存储和检索, 并向名称节点定期发送自己存储的块的列表. 每个数据节点的数据会被保存在各自节点的本地Linux文件系统中.")]),t._v(" "),s("div",{staticClass:"custom-block theorem"},[s("p",{staticClass:"title"},[t._v("FsImage和EditLog是如何工作的?")]),s("p",[t._v("名称节点在启动时会将FsImage的内容加载进入内存, 然后执行EditLog中的所有操作使得内存中的所有元数据保持最新的状态. 在完成这一切后, 名称节点会创建一个新的FsImage文件和一个空的EditLog文件. 此时名称节点启动成功, 进入正常工作状态.")]),t._v(" "),s("p",[t._v("此后HDFS的更新操作都会写入EditLog. 不写入FsImage的原因是FsImage的大小通常很大(一般在GB以上), 如果所有更新操作都写入FsImage的话更新操作会很缓慢. 而EditLog通常非常小, 可以高效写入.")]),t._v(" "),s("p",[t._v("我们称名称节点在启动过程中加载FsImage和EditLog的过程为"),s("code",[t._v('"安全模式"')]),t._v(', 只能对外提供读操作, 无法提供写操作. 启动结束后, 退出"安全模式", 进入正常运行状态后对外提供读写操作.')])]),s("h3",{attrs:{id:"第二名称节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第二名称节点"}},[t._v("#")]),t._v(" 第二名称节点")]),t._v(" "),s("p",[t._v('前面已经解释过FsImage和EditLog的作用, 显然, 随着名称节点不断运行, EditLog也会变得越来越大, 使得写入的过程变得异常缓慢. 不仅如此, 当节点重启时需要重新执行所有的EditLog中的操作, EditLog如果过大会导致名称节点处于"安全模式"的时间过长, 无法正常对外界提供写操作, 影响用户的正常使用.')]),t._v(" "),s("p",[t._v("为了有效解决EditLog过大带来的一系列问题, HDFS在设计中采用了"),s("strong",[t._v("第二名称节点(Secondary NameNode)")]),t._v(". 它具有两个功能:")]),t._v(" "),s("ol",[s("li",[t._v("完成EditLog和FsImage的合并. 减少EditLog的大小, 缩短名称节点重启时间.")]),t._v(" "),s("li",[t._v('作为名称节点的"检查点", 保存名称节点的元数据信息.')])]),t._v(" "),s("p",[t._v("我们现在逐一解释这两个功能:")]),t._v(" "),s("div",{staticClass:"custom-block theorem"},[s("p",{staticClass:"title"},[t._v("EditLog和FsImage的合并")]),s("ol",[s("li",[t._v("每隔一段时间, 第二名称节点会和名称节点通信, 请求其停止EditLog文件(假设此刻为"),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("msub",[s("mi",[t._v("t")]),s("mn",[t._v("1")])],1)],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("t_1")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.7651em","vertical-align":"-0.15em"}}),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathnormal"},[t._v("t")]),s("span",{staticClass:"msupsub"},[s("span",{staticClass:"vlist-t vlist-t2"},[s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.3011em"}},[s("span",{staticStyle:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),s("span",{staticClass:"sizing reset-size6 size3 mtight"},[s("span",{staticClass:"mord mtight"},[t._v("1")])])])]),s("span",{staticClass:"vlist-s"},[t._v("​")])]),s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[s("span")])])])])])])])]),t._v("). 此时名称节点会暂时将新达到的写操作添加到新文件"),s("code",[t._v("EditLog.new")]),t._v("中.")]),t._v(" "),s("li",[t._v("第二名称节点把名称节点中的FsImage文件和EditLog文件拉回到本地, 再加载到内存中并在内存中对这两个文件进行合并操作, 即在内存中逐一执行EditLog使得FsImage处于最新状态.")]),t._v(" "),s("li",[t._v("合并结束后, 第二名称节点会把合并后的FsImage文件发回名称节点.")]),t._v(" "),s("li",[t._v("名称节点会用新的FsImage替换原先旧的FsImage文件, 同时用EditLog.new替换EditLog(假设此刻为"),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("msub",[s("mi",[t._v("t")]),s("mn",[t._v("2")])],1)],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("t_2")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.7651em","vertical-align":"-0.15em"}}),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathnormal"},[t._v("t")]),s("span",{staticClass:"msupsub"},[s("span",{staticClass:"vlist-t vlist-t2"},[s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.3011em"}},[s("span",{staticStyle:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),s("span",{staticClass:"sizing reset-size6 size3 mtight"},[s("span",{staticClass:"mord mtight"},[t._v("2")])])])]),s("span",{staticClass:"vlist-s"},[t._v("​")])]),s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[s("span")])])])])])])])]),t._v(").")])]),t._v(" "),s("p",[t._v("通过上述的操作我们有效地减少了EditLog的大小.")])]),s("div",{staticClass:"custom-block theorem"},[s("p",{staticClass:"title"},[t._v("作为名称节点的检查点")]),s("p",[t._v('从上面的合并操作中我们可以得知: 第二名称节点会定期与名称节点通信并拉取EditLog和FsImage文件. 所以我们可以将第二名称节点看作是名称节点的"检查点", 周期性地备份名称节点中的元数据信息. 当名称节点发生故障, 我们可以使用第二名称节点中的元数据进行系统恢复.')]),t._v(" "),s("p",[t._v("但是显然, 在第二名称节点合并操作得到新的FsImage文件并不包含"),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("msub",[s("mi",[t._v("t")]),s("mn",[t._v("1")])],1)],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("t_1")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.7651em","vertical-align":"-0.15em"}}),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathnormal"},[t._v("t")]),s("span",{staticClass:"msupsub"},[s("span",{staticClass:"vlist-t vlist-t2"},[s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.3011em"}},[s("span",{staticStyle:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),s("span",{staticClass:"sizing reset-size6 size3 mtight"},[s("span",{staticClass:"mord mtight"},[t._v("1")])])])]),s("span",{staticClass:"vlist-s"},[t._v("​")])]),s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[s("span")])])])])])])])]),t._v("到"),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("msub",[s("mi",[t._v("t")]),s("mn",[t._v("2")])],1)],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("t_2")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.7651em","vertical-align":"-0.15em"}}),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathnormal"},[t._v("t")]),s("span",{staticClass:"msupsub"},[s("span",{staticClass:"vlist-t vlist-t2"},[s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.3011em"}},[s("span",{staticStyle:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),s("span",{staticClass:"sizing reset-size6 size3 mtight"},[s("span",{staticClass:"mord mtight"},[t._v("2")])])])]),s("span",{staticClass:"vlist-s"},[t._v("​")])]),s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[s("span")])])])])])])])]),t._v("时刻之间发生的更新操作, 所以如果名称节点在"),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("msub",[s("mi",[t._v("t")]),s("mn",[t._v("1")])],1)],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("t_1")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.7651em","vertical-align":"-0.15em"}}),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathnormal"},[t._v("t")]),s("span",{staticClass:"msupsub"},[s("span",{staticClass:"vlist-t vlist-t2"},[s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.3011em"}},[s("span",{staticStyle:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),s("span",{staticClass:"sizing reset-size6 size3 mtight"},[s("span",{staticClass:"mord mtight"},[t._v("1")])])])]),s("span",{staticClass:"vlist-s"},[t._v("​")])]),s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[s("span")])])])])])])])]),t._v("到"),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("msub",[s("mi",[t._v("t")]),s("mn",[t._v("2")])],1)],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("t_2")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.7651em","vertical-align":"-0.15em"}}),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathnormal"},[t._v("t")]),s("span",{staticClass:"msupsub"},[s("span",{staticClass:"vlist-t vlist-t2"},[s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.3011em"}},[s("span",{staticStyle:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),s("span",{staticClass:"sizing reset-size6 size3 mtight"},[s("span",{staticClass:"mord mtight"},[t._v("2")])])])]),s("span",{staticClass:"vlist-s"},[t._v("​")])]),s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[s("span")])])])])])])])]),t._v("时刻之间发生故障, 系统就会丢失一部分元数据信息. 在HDFS中也不支持系统直接切换到第二名称节点, 所以第二名称节点只是一个检查点, 并不会达到热备份的效果, 名称节点的元数据仍然有数据丢失的风险.")])]),s("Mermaid",{attrs:{id:"mermaid-64a56f68",code:"flowchart%20TD%0A%20%20%20%20el1--%3Efi2%0A%20%20%20%20fi1--%3E%7C2.%20%E4%BB%8E%E5%90%8D%E7%A7%B0%E8%8A%82%E7%82%B9%E4%B8%8A%E8%8E%B7%E5%8F%96EditLog%E5%92%8CFsImage%7Cfi2%0A%20%20%20%20ckpt1--%3E%7C4.%20%E6%8A%8A%E6%A3%80%E6%9F%A5%E7%82%B9%E5%9B%9E%E4%BC%A0%E7%BB%99%E5%90%8D%E7%A7%B0%E8%8A%82%E7%82%B9%7Cckpt2%0A%20%20%20%20ckpt2--%3Efi3%0A%20%20%20%20subgraph%20%E5%90%8D%E7%A7%B0%E8%8A%82%E7%82%B9%0A%20%20%20%20fi1%5BFsImage%5D%0A%20%20%20%20el1%5BEditLog%5D--%3E%7C1.%20%E4%BD%BF%E7%94%A8%E6%96%B0%E7%9A%84%E6%97%A5%E5%BF%97%7Celn%5BEditLog.new%5D%20%20%20%20%0A%20%20%20%20eln--%3Eel2%5BEditLog%5D%0A%20%20%20%20ckpt2%5BFsImage.ckpt%5D%0A%20%20%20%20fi3%5BFsImage%5D%0A%20%20%20%20end%0A%20%20%20%20subgraph%20%E7%AC%AC%E4%BA%8C%E5%90%8D%E7%A7%B0%E8%8A%82%E7%82%B9%0A%20%20%20%20el3%5BEditLog%5D--%3E%7C3.%20%E5%90%88%E5%B9%B6%7Cckpt1%0A%20%20%20%20fi2%5BFsImage%5D--%3Eckpt1%0A%20%20%20%20ckpt1%5BFsImage.ckpt%5D%0A%20%20%20%20end%0A%0A"}}),s("div",{staticClass:"center-container"},[s("p",[t._v("第二名称节点工作过程示意图")])]),s("h2",{attrs:{id:"hdfs体系结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hdfs体系结构"}},[t._v("#")]),t._v(" HDFS体系结构")]),t._v(" "),s("p",[t._v("在本小节我们将简要介绍HDFS的体系结构, 然后介绍命名空间管理、通信协议、客户端, 最后会讨论HDFS体系的局限性.")]),t._v(" "),s("h3",{attrs:{id:"概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),s("p",[t._v("HDFS采用的是一个"),s("strong",[t._v("主从结构")]),t._v("(Master/Slave)模型, 一个HDFS集群包含一个名称节点(有且仅有一个)和若干个数据节点.")]),t._v(" "),s("p",[t._v("名称节点作为中心服务器, 负责管理文件系统的"),s("strong",[t._v("命名空间")]),t._v("以及"),s("strong",[t._v("客户端对文件的访问")]),t._v('. 数据节点一般是一个节点运行一个数据节点进程, 负责文件系统客户端的读写请求, 在名称节点的统一调度下进行数据块的创建、删除和复制等操作. 每个数据节点的数据事实上保存在其本地的Linux文件系统中.\n数据节点会向名称节点发送心跳来报告自己的状况, 没有按时发送心跳的数据节点会被标注为"宕机", 不会再分配任何I/O请求.')]),t._v(" "),s("p",[t._v("在系统内部, 文件会被切分为若干个数据块, 这些数据块会被分布到若干个数据节点上. 当客户端需要访问一个文件时, 首先把文件名发送给名称节点, 名称节点会根据文件名找到对应的所有数据块, 在根据每个数据块的信息找到实际存储这些数据块的数据系欸但为止, 并把数据节点位置返还给客户端. 最后客户端直接访问这些数据节点获取数据. 可以看到, 在这个过程中名称节点并不直接参与数据的传输.")]),t._v(" "),s("h3",{attrs:{id:"命名空间管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命名空间管理"}},[t._v("#")]),t._v(" 命名空间管理")]),t._v(" "),s("p",[t._v("HDFS的命名空间包括: 目录、文件和块. 命名空间管理是指: 命名空间支持对HDFS中的目录、文件和块进行类似文件系统的创建、修改和删除等基本操作.")]),t._v(" "),s("p",[t._v("当前的HDFS体系结构中, "),s("mark",[t._v("整个HDFS集群只有一个命名空间, 并且只有唯一一个命名节点")]),t._v(", 该节点负责对这个命名空间进行管理.")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("局限")]),t._v(" "),s("p",[t._v("目前HDFS还未实现磁盘配额和文件访问权限等功能, 也不支持文件的硬链接"),s("sup",{staticClass:"footnote-ref"},[s("a",{attrs:{href:"#footnote1"}},[t._v("[1]")]),s("a",{staticClass:"footnote-anchor",attrs:{id:"footnote-ref1"}})]),t._v("和软连接"),s("sup",{staticClass:"footnote-ref"},[s("a",{attrs:{href:"#footnote2"}},[t._v("[2]")]),s("a",{staticClass:"footnote-anchor",attrs:{id:"footnote-ref2"}})]),t._v(".")])]),t._v(" "),s("h3",{attrs:{id:"通信协议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通信协议"}},[t._v("#")]),t._v(" 通信协议")]),t._v(" "),s("p",[t._v("HDFS的通信协议都是构建在TCP/IP协议上的. 客户端通过一个可配置的端口向名称节点发起TCP链接, 并使用客户端协议与名称节点进行通信. 名称节点和数据节点之间则使用数据节点的协议进行通信. 客户端与数据节点使用RPC(Remote Procedure Call)来实现.")]),t._v(" "),s("h3",{attrs:{id:"客户端"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#客户端"}},[t._v("#")]),t._v(" 客户端")]),t._v(" "),s("p",[t._v("客户端是用户操作HDFS最常用的方法, 不过严格来说客户端不算是HDFS的一部分. 可以支持打开、读取、写入等常见操作, 也可以使用shell命令来访问数据.")]),t._v(" "),s("h3",{attrs:{id:"局限性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#局限性"}},[t._v("#")]),t._v(" 局限性")]),t._v(" "),s("p",[t._v("HDFS只有一个名称节点在简化系统设计的同时带来了一些问题:")]),t._v(" "),s("ol",[s("li",[s("em",[s("strong",[t._v("命名空间的限制")])]),t._v(": 名称节点是保存在内存中的, 受到硬件内存的限制")]),t._v(" "),s("li",[s("em",[s("strong",[t._v("性能瓶颈")])]),t._v(": 整个分布式系统的吞吐量受到单个名称节点的吞吐量的限制")]),t._v(" "),s("li",[s("em",[s("strong",[t._v("隔离问题")])]),t._v(": 由于集群中只有一个名称节点, 只有一个命名空间, 无法对不同的程序进行隔离")]),t._v(" "),s("li",[s("em",[s("strong",[t._v("集群可用性")])]),t._v(": 一旦名称节点发生故障, 会导致整个集群不可用")])]),t._v(" "),s("h2",{attrs:{id:"存储原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#存储原理"}},[t._v("#")]),t._v(" 存储原理")]),t._v(" "),s("h3",{attrs:{id:"数据的冗余存储"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据的冗余存储"}},[t._v("#")]),t._v(" 数据的冗余存储")]),t._v(" "),s("p",[t._v("为了保证系统的容错性和可用性, HDFS采用了多副本方式对数据进行冗余存储, 通常一个数据块的多个副本会被分布到不同的数据节点上. 这种多副本方法有以下优点:")]),t._v(" "),s("ol",[s("li",[t._v("加快数据传输: 当多个客户端需要访问同一个文件时, 可以让客户端从不同的副本中读取数据")]),t._v(" "),s("li",[t._v("容易检查数据错误")]),t._v(" "),s("li",[t._v("保证数据可靠性")])]),t._v(" "),s("h3",{attrs:{id:"数据存取策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据存取策略"}},[t._v("#")]),t._v(" 数据存取策略")]),t._v(" "),s("p",[t._v("数据的存取策略是分布式文件系统的核心内容, 很大程度上会影响到整个分布式文件系统的读写性能.")]),t._v(" "),s("h4",{attrs:{id:"_1-数据存放"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-数据存放"}},[t._v("#")]),t._v(" 1. 数据存放")]),t._v(" "),s("p",[t._v("HDFS采用了以机架为基础的数据存放策略.")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("节点在同一个机架和不同机架的区别")]),t._v(" "),s("p",[t._v("不同机架之间的数据通信需要经过交换机或者路由器, 同一个机架中不同机器之间的通信不需要经过交换机和路由器.")]),t._v(" "),s("p",[t._v("这意味着同一个机架中不同机器之间的通信要比不同机架之间的通信带宽大.")])]),t._v(" "),s("p",[t._v("HDFS默认策略是每个数据节点都在不同的机架上.")]),t._v(" "),s("p",[t._v("优点:")]),t._v(" "),s("ol",[s("li",[t._v("高可靠性. 一个机架出现故障可以使用其他机架上的副本")]),t._v(" "),s("li",[t._v("读取速度高. 多个副本可以并行读取")]),t._v(" "),s("li",[t._v("更容易实现负载均衡和错误处理.")])]),t._v(" "),s("p",[t._v("缺点:")]),t._v(" "),s("ol",[s("li",[t._v("写入数据时无法充分利用同一个机架内部的带宽.")])]),t._v(" "),s("p",[t._v("HDFS默认的复制因子是3, 每个文件块都会被同时复制到三个地方, 其中有两个副本放在同一个机架的不同机器上, 第三个副本放在不同机架的机器上.")]),t._v(" "),s("h4",{attrs:{id:"_2-数据读取"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-数据读取"}},[t._v("#")]),t._v(" 2. 数据读取")]),t._v(" "),s("p",[t._v("HDFS提供了一个API可以确定一个数据节点所属的机架ID, 客户端可以调用API获取自己所属的机架ID. 当客户端读取数据时, 从名称节点获取数据块不同副本的存放位置列表, 可以调用API来确定客户端和这些数据节点所属的机架ID. 如果在同一个机架, 则可以优先读取该副本.")]),t._v(" "),s("h4",{attrs:{id:"_3-数据复制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-数据复制"}},[t._v("#")]),t._v(" 3. 数据复制")]),t._v(" "),s("p",[t._v("HDFS数据复制采用了流水线复制的策略. 当客户端写入一个文件时:")]),t._v(" "),s("ol",[s("li",[t._v("首先文件被写入本地, 并被切分成不同的数据块")]),t._v(" "),s("li",[t._v("每个块都向名称节点发起写请求")]),t._v(" "),s("li",[t._v("名称节点根据数据节点使用情况选择一个数据节点列表返回给客户端")]),t._v(" "),s("li",[t._v("客户端将数据首先写入列表的第一个数据节点, 并将列表传递给第一个数据节点")]),t._v(" "),s("li",[t._v("第一个数据节点接受到"),s("strong",[t._v("4KB")]),t._v("数据时, 写入本地, 并向列表的第二个数据节点发起连接请求, 将自己已经接受到的4KB数据传给第二个数据节点")]),t._v(" "),s("li",[t._v("第二个数据节点也以此类推, 在接收到4KB时向第三个数据节点进行请求, 形成流水线\n当文件写完的时候, 数据复制也会同时完成.")])]),t._v(" "),s("h3",{attrs:{id:"数据错误与恢复"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据错误与恢复"}},[t._v("#")]),t._v(" 数据错误与恢复")]),t._v(" "),s("p",[t._v("HDFS拥有非常高的容错性, 使得它可以兼容廉价的硬件设备. HDFS将硬件设备出错堪称时一种常态而非异常, 并设计了相应的机制检测数据错误和进行自动恢复. 分为以下三种情况:")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("名称节点出错")]),t._v("\n名称节点保存着所有的元数据信息, 其中包含最核心的EditLog和FsImage, 如果发生损坏则整个HDFS实例失效.")])]),t._v(" "),s("p",[t._v("Hadoop采用两种机制来确保名称节点的安全:")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("把名称节点的元数据信息同步存储到其他文件系统. 比如远程挂载NFS")])]),t._v(" "),s("li",[s("p",[t._v("运行一个第二名称节点")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("数据节点出错")]),t._v('\n每个数据节点会定期向名称节点发送"心跳"信息, 向名称节点报告自己的状态. 当数据节点发生故障或者网路出现断网时, 名称节点会把收不到"心跳"的数据节点标记为"宕机", 节点上所有的数据都标记为"不可读", 名称节点后续不会再发送任何I/O请求.')])])]),t._v(" "),s("p",[t._v('而标注完"宕机"后, 会有部分数据块的副本数量小于冗余因子, 此时名称节点会定期检测这种情况, 一旦发现则会启动数据冗余复制.')]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[s("strong",[t._v("数据出错")]),t._v("\n网络传输和磁盘都会导致数据错误. 客户端在读取数据后会采用 "),s("mark",[t._v("md5和shal")]),t._v(" 对数据进行校验, 以确保读到的时正确的数据. 而此处校验的信息是客户端在文件被创建的时候写入同一个路径的隐藏文件夹下的.")])]),t._v(" "),s("p",[t._v("当客户端校验出错, 客户端会请求其他数据节点的数据块副本, 并向名称节点报告该数据块有错误, 名称节点会定期检查并重新复制这个数据块.")]),t._v(" "),s("p",[s("br"),s("br"),s("br")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("参考资料")]),t._v(" "),s("ol",[s("li",[s("a",{attrs:{href:"https://book.douban.com/subject/27606713/",target:"_blank",rel:"noopener noreferrer"}},[t._v("《大数据技术原理与应用(第2版)》"),s("OutboundLink")],1)])])]),t._v(" "),s("hr",{staticClass:"footnotes-sep"}),t._v(" "),s("section",{staticClass:"footnotes"},[s("ol",{staticClass:"footnotes-list"},[s("li",{staticClass:"footnote-item",attrs:{id:"footnote1"}},[s("p",[s("strong",[t._v("硬链接")]),t._v(': 硬链接实际上是同一文件系统中同一个文件的多个"入口". 每个硬链接指向的是同一个文件的inode(索引节点), 所有硬链接共享相同的inode和数据块. 这意味着, 无论你通过哪个硬链接访问文件, 实际上看到的都是同一份数据. 当你修改其中一个硬链接对应的文件内容时, 其他所有硬链接所指的文件内容也会随之改变. 删除任意一个硬链接并不会影响其他硬链接或者文件本身, 只有当所有硬链接都被删除(以及没有其他引用)时, 文件内容才会真正被删除. '),s("a",{staticClass:"footnote-backref",attrs:{href:"#footnote-ref1"}},[t._v("↩︎")])])]),t._v(" "),s("li",{staticClass:"footnote-item",attrs:{id:"footnote2"}},[s("p",[s("strong",[t._v("软链接")]),t._v(": 软链接则是一个独立的特殊类型的文件, 它存储的是目标文件或目录的路径. 当你访问软链接时, 系统会跟踪这个路径并解析到真正的目标文件. 因此, 软链接更像是一个指向目标文件的指针或快捷方式. 如果原文件被删除或移动, 软链接将失效, 因为系统找不到其所指向的目标. "),s("a",{staticClass:"footnote-backref",attrs:{href:"#footnote-ref2"}},[t._v("↩︎")])])])])])],1)}),[],!1,null,null,null);s.default=e.exports}}]);